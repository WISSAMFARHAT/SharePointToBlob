@inject Connection.SharePointGraph _sharePointGraph;
@inject IJSRuntime JS;

@if (Items != null)
{
    <section>
        <article class="sites">
            <div class="sites-button">

                @if (!string.IsNullOrEmpty(Site.FolderID))
                {
                    <select @bind="FileExisting">
                        @foreach (var fruit in Enum.GetValues(typeof(FileExistingModel)))
                        {
                            <option value="@fruit">@fruit</option>
                        }
                    </select>
                  
                    <button @onclick="Archive" class="--button _secondary"><span>Archive</span> <span>@DisplayTotalSize</span></button>
                }
            </div>
            <h1> @(string.IsNullOrEmpty(Site.Name) ? "Site" : Site.Name) </h1>

            <div class="sites-info">
                <div class="sites-info-search">
                    <input type="text" placeholder="Search by Name..." @oninput="Search" />
                </div>

                <div class="sites-info-message" id="message">
                    <p>Task completed</p>
                </div>

                <div class="sites-info-description">
                    @foreach (ItemModel item in TempItems)
                    {
                        @if (!string.IsNullOrEmpty(item.Name))
                        {
                            @if (string.IsNullOrEmpty(Site.Name))
                            {
                                <a href="/@item.Name/@item.ID" class="--button _primary">
                                    <p>
                                        @item.Name
                                    </p>
                                </a>
                            }
                            else
                            {
                                string name = Url;
                                int firstSlashIndex = name.IndexOf('/');
                                int secondSlashIndex = name.IndexOf('/', firstSlashIndex + 1);
                                name = name.Remove(secondSlashIndex, 1).Insert(secondSlashIndex, $"|{item.Name}/");

                                <a href="@name/@item.ID" class="--button _primary">
                                    <p>@item.Name</p>

                                    @if (item.ShowDiv)
                                    {
                                        <div>
                                            <p>@item.Count items</p>
                                            <span>
                                                @item.DisplaySize
                                            </span>
                                        </div>
                                    }
                                </a>
                            }
                        }
                    }
                </div>
            </div>
        </article>
    </section>
}
else
{
    <section class="loading">
        <article>
            <DotCompoments.Compoments.Assets.Logo />
        </article>
    </section>

}

@if (Loading)
{
    <section class="loadingPopup">
        <article>
            <div class="loadingPopup-close">
                <button @onclick="Close">X</button>
            </div>
            <div class="loadingPopup-details">
                <div>
                    <p class="progressTitle">@ProgressTitle</p>
                </div>
                <div>
                    <span style="--percentage:@Percentage%;"></span>
                </div>
            </div>

            @if (ShowError)
            {
                <div class="loadingPopup-failed">
                    <div>Failed Files:</div>
                    @foreach (string file in TransferFailedFiles)
                    {
                        <span>@file</span>
                    }
                </div>
            }
            else
            {
                <div class="loadingPopup-loading">
                    <DotCompoments.Compoments.Assets.Logo />
                </div>
            }

            @if (!string.IsNullOrEmpty(ErrorDescription))
            {
                <div class="loadingPopup-error">
                    <span>Error: @ErrorDescription </span>
                </div>
            }
        </article>
    </section>
}